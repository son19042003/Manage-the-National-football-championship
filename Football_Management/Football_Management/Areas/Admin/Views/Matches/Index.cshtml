@model Football_Management.Areas.Admin.ViewModels.PaginatedViewModel<Football_Management.Areas.Admin.ViewModels.Matches.IndexViewModel>

@{
    ViewData["Title"] = "Index";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Home </li>
    </ol>
</nav>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-area="admin" asp-controller="home" asp-action="Index">Home  </a>
        </li>
        <li class="breadcrumb-item">  <a>Matches </a> </li>
        <li class="breadcrumb-item active" aria-current="page">Match results </li>
    </ol>
</nav>

<form asp-controller="Matches" asp-action="Create" method="post">
    <button type="submit" class="btn btn-primary">Auto Create Matches</button>
</form>

<div class="card card-default">
    <div class="card-body">
        <div style="margin-bottom: 10px; display: inline-flex">
            <input style="margin-right: 10px" type="text" id="searchInputMatch" class="form-control" placeholder="Search Matches" />
            <input type="text" id="searchInputRound" class="form-control" placeholder="Search Rounds" />
        </div>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageNumber)
            {
                <h4 style="margin-bottom: 15px">Page number: @i/@Model.TotalPages</h4>
            }
        }
        <table class="table table-light">
            <thead class="thead-light">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Round</th>
                    <th scope="col">Home Team</th>
                    <th scope="col">Date</th>
                    <th scope="col">Away Team</th>
                    <th scope="col">Other</th>
                </tr>
            </thead>
            <tbody id="matchesTable">
                @foreach (var match in Model.Items)
                {
                    <tr class="clubRow">
                        <td scope="row">@match.Index</td>
                        <td>@match.Round</td>
                        <td>
                            <img src="~/Assets/images/logo/@match.LogoHomeTeam" alt="Logo" style="width: 30px; height: 30px" />
                            <span style="margin-left: 10px">@match.HomeTeam</span>
                        </td>
                        <td>
                            @if (match.Status == "Full-time")
                            {
                                <span class="badge badge-success">@match.GoalsH - @match.GoalsA</span>
                            }
                            else if (match.Status == "Delayed")
                            {
                                <span class="badge badge-warning">@match.DateStart</span>
                            }
                            else if (match.Status == "Scheduled")
                            {
                                <span class="badge badge-light">@match.DateStart</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">@match.GoalsH - @match.GoalsA</span>
                            }
                        </td>
                        <td>
                            <span style="margin-right: 10px">@match.AwayTeam</span>
                            <img src="~/Assets/images/logo/@match.LogoAwayTeam" alt="Logo" style="width: 30px; height: 30px" />
                        </td>
                        <th>
                            <a asp-controller="Matches" asp-action="Detail" asp-route-id="@match.MatchId" asp-route-pageNumber="@Model.PageNumber">
                                <span class="mdi mdi-format-list-bulleted"></span>
                            </a>
                            <a asp-controller="Matches" asp-action="Edit" asp-route-id="@match.MatchId" asp-route-pageNumber="@Model.PageNumber">
                                <span class="mdi mdi-pencil"></span>
                            </a>
                        </th>
                    </tr>
                }
            </tbody>
        </table>
        <div class="align-items-end" style="margin-top: 10px">
            <nav aria-label="Page navigation example">
                <ul class="pagination pagination-seperated">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Previous" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize">
                                <span aria-hidden="true" class="mdi mdi-chevron-left mr-1">Prev</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                    }
                    <li class="page-item active">
                        <a class="page-link">Page @Model.PageNumber of @Model.TotalPages</a>
                    </li>
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Next" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize">
                                <span aria-hidden="true" class="mdi mdi-chevron-right ml-1">Next</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#searchInputMatch, #searchInputRound').on('input', function () {
            const matchKeyword = $('#searchInputMatch').val();
            const roundKeyword = $('#searchInputRound').val();

            $.ajax({
                url: '/Matches/SearchMatches',
                type: 'GET',
                data: { matchKeyword: matchKeyword, roundKeyword: roundKeyword },
                success: function (data) {
                    const tableBody = $('#clubsTable');
                    tableBody.empty(); // Xóa nội dung cũ

                    data.forEach((match, index) => {
                        const row = `
                            <tr class="clubRow">
                                <td>${match.Index}</td>
                                <td>${match.HomeTeam}</td>
                                <td>${match.Round}</td>
                                <td>${match.AwayTeam}</td>
                                <td>
                                    <a href="/Matches/Detail/${match.MatchId}">
                                        <span class="mdi mdi-format-list-bulleted"></span>
                                    </a>
                                    <a href="/Matches/Edit/${match.MatchId}">
                                        <span class="mdi mdi-pencil"></span>
                                    </a>
                                </td>
                            </tr>
                        `;
                        tableBody.append(row);
                    });
                },
                error: function () {
                    alert("Failed to load matches.");
                }
            });
        });
    });
</script>